package com.ui;

import com.classes.Detector;
import com.database.DatabaseConfiguration;
import com.database.Scripts;
import com.lookandfeel.LookAndFeel;
import com.prototypes.Translator;
import com.prototypes.Validator;
import com.window.dialog.PopupPane;
import com.window.location.FrameEvents;
import files.FileProcessor;
import files.LanguageResources;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JLabel;
import javax.swing.JTextField;
import org.apache.commons.codec.digest.DigestUtils;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.ResourceBundle;
import javax.swing.ImageIcon;

import static java.lang.System.*;

public class SignupFrame extends javax.swing.JFrame implements Validator, Translator
{
    private final FileProcessor filePro;
    private static ResourceBundle resources;
    private static int clickCount = 0;
    private char gender;
    
    /**
     * Creates new form SignupFrame
     */
    @SuppressWarnings("LeakingThisInConstructor")
    public SignupFrame()
    {
        initComponents();
        filePro = FileProcessor.createFile("preference");
        filePro.loadFile();
        
        FrameEvents.draggableWindow(this, containerPanel);
        FrameEvents.centerFrame(this);
        LanguageResources.setLanguageResourceFile(this, langComboBox);
        autoSelectGender();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        outerPanel = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        containerPanel = new javax.swing.JPanel();
        leftPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        closeLabel = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        upperPanel = new javax.swing.JPanel();
        headerLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        innerPanel = new javax.swing.JPanel();
        usernameField = new javax.swing.JTextField();
        usernameLabel1 = new javax.swing.JLabel();
        passwordLabel1 = new javax.swing.JLabel();
        confirmPasswordLabel1 = new javax.swing.JLabel();
        signupBtn = new javax.swing.JButton();
        maleRadioBtn = new javax.swing.JRadioButton();
        femaleRadioBtn = new javax.swing.JRadioButton();
        backBtn = new javax.swing.JButton();
        idNumberField = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        contactField = new javax.swing.JTextField();
        phoneLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        idNumberLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        confirmPasswordLabel = new javax.swing.JLabel();
        contactLabel = new javax.swing.JLabel();
        passwordField = new javax.swing.JPasswordField();
        confirmPasswordField = new javax.swing.JPasswordField();
        langComboBox = new javax.swing.JComboBox();

        outerPanel.setBackground(new java.awt.Color(255, 255, 255));
        outerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        jProgressBar1.setIndeterminate(true);
        jProgressBar1.setRequestFocusEnabled(false);
        jProgressBar1.setString("");

        javax.swing.GroupLayout outerPanelLayout = new javax.swing.GroupLayout(outerPanel);
        outerPanel.setLayout(outerPanelLayout);
        outerPanelLayout.setHorizontalGroup(
            outerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        outerPanelLayout.setVerticalGroup(
            outerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outerPanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        containerPanel.setBackground(new java.awt.Color(230, 230, 230));
        containerPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));

        leftPanel.setBackground(new java.awt.Color(45, 141, 156));
        leftPanel.setPreferredSize(new java.awt.Dimension(109, 192));

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 130, Short.MAX_VALUE)
        );

        rightPanel.setBackground(new java.awt.Color(45, 141, 156));
        rightPanel.setPreferredSize(new java.awt.Dimension(103, 192));

        closeLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/close24.png"))); // NOI18N
        closeLabel.setToolTipText("");
        closeLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        closeLabel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                closeLabelMouseMoved(evt);
            }
        });
        closeLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                closeLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                closeLabelMousePressed(evt);
            }
        });

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/images/minimize.png"))); // NOI18N
        minimize.setToolTipText("");
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                minimizeMousePressed(evt);
            }
        });

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rightPanelLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(minimize, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(closeLabel)
                .addGap(18, 18, 18))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(minimize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(closeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        upperPanel.setBackground(new java.awt.Color(45, 141, 156));

        headerLabel.setFont(new java.awt.Font("Segoe UI Light", 1, 24)); // NOI18N
        headerLabel.setForeground(new java.awt.Color(255, 255, 255));
        headerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        headerLabel.setText("Sign up ");

        javax.swing.GroupLayout upperPanelLayout = new javax.swing.GroupLayout(upperPanel);
        upperPanel.setLayout(upperPanelLayout);
        upperPanelLayout.setHorizontalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        upperPanelLayout.setVerticalGroup(
            upperPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(upperPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(headerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        innerPanel.setBackground(new java.awt.Color(255, 255, 255));
        innerPanel.setForeground(new java.awt.Color(255, 255, 255));
        innerPanel.setAutoscrolls(true);

        usernameField.setFont(new java.awt.Font("Calibri Light", 0, 15)); // NOI18N
        usernameField.setMargin(new java.awt.Insets(5, 9, 1, 2));
        usernameField.setName(""); // NOI18N

        usernameLabel1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        usernameLabel1.setText("Username");

        passwordLabel1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        passwordLabel1.setText("Password");

        confirmPasswordLabel1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        confirmPasswordLabel1.setText("Confirm Password");

        signupBtn.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        signupBtn.setText("Signup");
        signupBtn.setPreferredSize(new java.awt.Dimension(86, 27));
        signupBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signupBtnActionPerformed(evt);
            }
        });

        maleRadioBtn.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(maleRadioBtn);
        maleRadioBtn.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        maleRadioBtn.setText("Male");

        femaleRadioBtn.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(femaleRadioBtn);
        femaleRadioBtn.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        femaleRadioBtn.setText("Female");

        backBtn.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        idNumberField.setFont(new java.awt.Font("Calibri Light", 0, 15)); // NOI18N
        idNumberField.setMargin(new java.awt.Insets(5, 9, 1, 2));
        idNumberField.setName(""); // NOI18N

        idLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        idLabel.setText("ID Number");

        contactField.setFont(new java.awt.Font("Calibri Light", 0, 15)); // NOI18N
        contactField.setMargin(new java.awt.Insets(5, 9, 1, 2));
        contactField.setName(""); // NOI18N

        phoneLabel.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        phoneLabel.setText("Phone Number");

        passwordLabel.setVisible(true);

        passwordField.setFont(new java.awt.Font("Calibri Light", 0, 15)); // NOI18N
        passwordField.setMargin(new java.awt.Insets(5, 9, 1, 2));

        confirmPasswordField.setFont(new java.awt.Font("Calibri Light", 0, 15)); // NOI18N
        confirmPasswordField.setMargin(new java.awt.Insets(5, 9, 1, 2));

        javax.swing.GroupLayout innerPanelLayout = new javax.swing.GroupLayout(innerPanel);
        innerPanel.setLayout(innerPanelLayout);
        innerPanelLayout.setHorizontalGroup(
            innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(innerPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(innerPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(contactLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(148, 148, 148))
                    .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(innerPanelLayout.createSequentialGroup()
                            .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(innerPanelLayout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(usernameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(innerPanelLayout.createSequentialGroup()
                                    .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(maleRadioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(signupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(20, 20, 20)
                                    .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(femaleRadioBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(usernameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 99, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, innerPanelLayout.createSequentialGroup()
                            .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(innerPanelLayout.createSequentialGroup()
                                    .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(passwordField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                        .addComponent(passwordLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(20, 20, 20)
                                    .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(innerPanelLayout.createSequentialGroup()
                                            .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(confirmPasswordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(confirmPasswordLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE))
                                        .addComponent(confirmPasswordField)))
                                .addComponent(usernameField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(idNumberField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, innerPanelLayout.createSequentialGroup()
                                    .addGap(2, 2, 2)
                                    .addComponent(idNumberLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(contactField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGap(60, 60, 60)))))
        );
        innerPanelLayout.setVerticalGroup(
            innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, innerPanelLayout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(usernameLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(usernameField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(usernameLabel)
                .addGap(18, 18, 18)
                .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(idNumberField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(idNumberLabel)
                .addGap(18, 18, 18)
                .addComponent(phoneLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(contactLabel)
                .addGap(18, 18, 18)
                .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(innerPanelLayout.createSequentialGroup()
                        .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(confirmPasswordLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2)
                        .addComponent(passwordField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(innerPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(confirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addComponent(passwordLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(innerPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(maleRadioBtn)
                            .addComponent(femaleRadioBtn)))
                    .addComponent(confirmPasswordLabel))
                .addGap(10, 10, 10)
                .addGroup(innerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(signupBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        jScrollPane1.setViewportView(innerPanel);

        langComboBox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        langComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English (default)", "Sesotho", "Xhosa", "Zulu" }));
        langComboBox.setAutoscrolls(true);
        langComboBox.setMinimumSize(new java.awt.Dimension(115, 19));
        langComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                langComboBoxItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout containerPanelLayout = new javax.swing.GroupLayout(containerPanel);
        containerPanel.setLayout(containerPanelLayout);
        containerPanelLayout.setHorizontalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(upperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(langComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        containerPanelLayout.setVerticalGroup(
            containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(containerPanelLayout.createSequentialGroup()
                .addGroup(containerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leftPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(containerPanelLayout.createSequentialGroup()
                        .addComponent(upperPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(16, 16, 16)
                .addComponent(langComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(containerPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closeLabelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseMoved
       closeLabel.setIcon(new ImageIcon(getClass().getResource("/com/images/close2.png")));
    }//GEN-LAST:event_closeLabelMouseMoved

    private void closeLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMouseExited
        closeLabel.setIcon(new ImageIcon(getClass().getResource("/com/images/close24.png")));
    }//GEN-LAST:event_closeLabelMouseExited

    private void closeLabelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeLabelMousePressed
        filePro.loadFile();
        final String FILE = filePro.getProperties().get("file").toString(); 
        resources = ResourceBundle.getBundle(FILE);
        FrameEvents.closeWindow(this, resources);
    }//GEN-LAST:event_closeLabelMousePressed

    private void minimizeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMousePressed
        FrameEvents.minimizeWindow(this);
    }//GEN-LAST:event_minimizeMousePressed

    private void signupBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signupBtnActionPerformed
        String password = getInputValue(passwordField).trim();
        String username = usernameField.getText().trim();
        String id = idNumberField.getText().trim();
        String phoneNumber = contactField.getText().trim();
        
        if (!isEmpty() && isValidRules(password))
        {
            if (DatabaseConfiguration.isConnected())
            {
                String encrypt = DigestUtils.sha1Hex(password);
                
                if (!exists(id, encrypt)) {
                    int updateCount = new Scripts().addUser(username, id, phoneNumber, encrypt, gender, LocalDate.now());
                    rowCount(updateCount);   
                }    
                else {
                    PopupPane.errDialog(this, resources.getString("accexist"), resources.getString("dbaccmsgerr"));
                }  
            } 
            else
            {
                temporaryStorage(username, id, phoneNumber, password, gender);
                PopupPane.errDialog(this, resources.getString("dbservererr"), resources.getString("dbservermsg"));
                restart();
            }
        }
    }//GEN-LAST:event_signupBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        clickCount = 0;
        back();
    }//GEN-LAST:event_backBtnActionPerformed

    private void langComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_langComboBoxItemStateChanged
        /* Increment the value to indicate a click event */
        clickCount++;
        
        String language = filePro.getProperties().get("language").toString();
        
        if (language.equals("English (default)")) {
            clickCount++;
        }
        LanguageResources.selectLanguage(langComboBox, clickCount, this, 
                containerPanel, outerPanel, this);
    }//GEN-LAST:event_langComboBoxItemStateChanged

    /**
     * Creates a listener object to obtain character-based values to
     * determine and automatically set the Gender by processing each
     * digit in the field; this method presents a trivial approach which
     * is specific to the ID-Number in South Africa.
     */
    private void autoSelectGender()
    {
        idNumberField.addKeyListener(new KeyAdapter()
        {
            @Override
            public void keyPressed(KeyEvent event)
            {
                String id = idNumberField.getText();
                int index = 6;
                int genderVal;

                if (id.length() == index + 1)
                {
                    String letter = String.valueOf(id.charAt(index));
                    try
                    {
                        genderVal = Integer.parseInt(letter);

                        switch (genderVal)
                        {
                            case 0:
                            case 1:
                            case 2:
                            case 3:
                            case 4:                 
                                gender = 'F';
                                femaleRadioBtn.setSelected(true);
                                break;

                            case 5:
                            case 6:
                            case 7:
                            case 8:
                            case 9:
                                gender = 'M';
                                maleRadioBtn.setSelected(true);
                                break;

                            default:
                                System.err.format("%s", "ID Number is invalid");
                                break;
                        }
                    }
                    catch(NumberFormatException numberFormat){
                        System.out.format("%s%n", numberFormat);
                    }
                }
            }
        });
    }
        
    /**
     * When invoked, this method stores the user data should the database
     * server be down. Saves the temporary file in the 'src' folder.
     * 
     * @param username The username parsed as a String
     * @param id The id parsed as a String
     * @param number The number parsed as a String 
     * @param password The password parsed as a String
     * @param gender The gender parsed as a char
     */
    private void temporaryStorage(String username, String id, String number, String password, char gender)
    {
        final File FILE = new File("userData.txt");
        final String FORMAT = "%-17s%-20s%-22s%-45s%s%n%-17s%-20s%-22s%-45s%c%n"; 
        final String PASSWORD = DigestUtils.sha1Hex(password);

        BufferedWriter writeFile = null;
        
        try
        {
            if (!FILE.exists()) {
                out.format("%s%n", FILE.createNewFile() ? "File successfully"
                        + " created." : "File creation was unsuccessful.");
            }
       
            writeFile = new BufferedWriter(new FileWriter(FILE, false));
            
            writeFile.append(String.format(FORMAT, 
                    "USERNAME", "ID NUMBER", "CELLPHONE NUMBER", "PASSWORD", 
                    "GENDER", username, id, number, PASSWORD, gender));
        }
        catch(IOException fileErr) {
            out.format("%s%n", fileErr);
        }
        finally
        {
            if (writeFile != null) {
                try {
                    writeFile.flush();
                } 
                catch (IOException file) {
                    out.format("%s%n", file);
                }
            }
        }
    }
    
    private boolean isValidRules(String password)
    {
        return validateUsername(usernameField, resources, usernameLabel) & 
               validateIdNumber() & 
               validatePhoneNumber(contactField, resources, contactLabel) 
               & validatePassword() && isPasswordMatch(password);
    }

    private boolean validateIdNumber()
    {
        String idNumber = getInputValue(idNumberField);
        String idText = resources.getString("validid");

        if (!idNumber.matches("\\d{13}"))
        {
            setFontColor(idNumberLabel, Color.red);
            idNumberLabel.setText(idText);
            return false;
        }
        idNumberLabel.setText("");
        return true;
    }

    private boolean validatePassword()
    {
        String password = getInputValue(passwordField);

        if (!password.matches("\\d{8}"))
        {
            String passwordText = resources.getString("validpassword");
            confirmPasswordLabel.setText("");
            setFontColor(passwordLabel, Color.red);
            passwordLabel.setText(passwordText);
            return false;
        }
        passwordLabel.setText("");
        return true;
    }

    private boolean isPasswordMatch(String password)
    {
        String confirmPass = getInputValue(confirmPasswordField);

        if (password.equalsIgnoreCase(confirmPass))
        {
            setFontColor(confirmPasswordLabel, Color.green);
            confirmPasswordLabel.setText(resources.getString("passwordmatch"));
            return true;
        }
        else
        {
            setFontColor(confirmPasswordLabel, Color.red);
            confirmPasswordLabel.setText(resources.getString("passworderr"));
            return false;
        }
    }

    private void setFontColor(JLabel label, Color color) {
        label.setForeground(color);
    }

    private String getInputValue(JTextField text) {
        int size = text.getText().length();
        return size > 0 ? text.getText() : "";
    }
    
    public boolean exists(String id, String password) 
    {
        ArrayList<Detector> data = new Scripts().authenticate();
        return data.stream().anyMatch((val) ->
        {
            return val.getIdNumber().equalsIgnoreCase(id) || (val.getPassword()
                    .equalsIgnoreCase(password));
        });
    }
    
    private void rowCount(int val)
    {
        if (val > 0)
        {
            JOptionPane.showMessageDialog(this, resources.getString("dbaccsuccess"), 
                    resources.getString("dbaccmsg"), JOptionPane.INFORMATION_MESSAGE
            );
            
            filePro.getProperties().setProperty("count", "0");
            filePro.saveFile();
            clickCount = 0;
            loginForm();
        } 
        else 
        {
            JOptionPane.showMessageDialog(this, resources.getString("dbaccerr"),
                    resources.getString("dbaccmsgerr"), JOptionPane.ERROR_MESSAGE
            );
        }
    }
    
    private void restart()
    {
        dispose();
        WelcomeFrame welcome;
        
        try 
        {
            Thread.sleep(4000);
            welcome = new WelcomeFrame();
            welcome.setVisible(true);
        }
        catch(Exception failure) {
            System.out.format("%s%n%n", failure);
        }
    }

    @Override
    public boolean isEmpty()
    {
        if (usernameField.getText().isEmpty() || idNumberField.getText()
                .isEmpty() || contactField.getText().isEmpty() ||
                passwordField.getText().isEmpty() 
                || confirmPasswordField.getText().isEmpty())
        {
            PopupPane.emptyDialog(this, resources);
            return true;
        }
        return false;
    }
    
    private void loginForm()
    {
        LoginFrame login = new LoginFrame();
        setVisible(false);
        login.setVisible(true);
    } 

    public void back() 
    {
        usernameLabel.setText("");
        
        String message = resources.getString("loginform");
        String title   = resources.getString("select");
        int choice     =  PopupPane.confirmDialog(this, message, title);

        if(choice == JOptionPane.YES_OPTION) {
            setVisible(false);
            new LoginFrame().setVisible(true);
        }
    }
    
    @Override
    public void updateLanguagePreference(String resourceFile, String locale)
    {
          resources = ResourceBundle.getBundle(resourceFile); 
          
          headerLabel.setText(resources.getString("signupLabel"));
          usernameLabel1.setText(resources.getString("username")); 
          
          idLabel.setText(resources.getString("idLabel"));         
          phoneLabel.setText(resources.getString("phoneLabel")); 
          
          passwordLabel1.setText(resources.getString("password"));          
          confirmPasswordLabel1.setText(resources.getString("confirmPassword"));
          
          maleRadioBtn.setText(resources.getString("male"));
          femaleRadioBtn.setText(resources.getString("female"));
          
          signupBtn.setText(resources.getString("signup"));
          backBtn.setText(resources.getString("back"));
          minimize.setToolTipText(resources.getString("minimize"));
          closeLabel.setToolTipText(resources.getString("exit"));
          langComboBox.setSelectedItem(locale);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the GUI look and feel */
        LookAndFeel.setLookAndFeel("Windows");

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SignupFrame().setVisible(true);
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton backBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JLabel closeLabel;
    private static javax.swing.JPasswordField confirmPasswordField;
    private static javax.swing.JLabel confirmPasswordLabel;
    private static javax.swing.JLabel confirmPasswordLabel1;
    private static javax.swing.JTextField contactField;
    private static javax.swing.JLabel contactLabel;
    private static javax.swing.JPanel containerPanel;
    private static javax.swing.JRadioButton femaleRadioBtn;
    private static javax.swing.JLabel headerLabel;
    private static javax.swing.JLabel idLabel;
    private static javax.swing.JTextField idNumberField;
    private static javax.swing.JLabel idNumberLabel;
    private static javax.swing.JPanel innerPanel;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JProgressBar jProgressBar1;
    private static javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JComboBox langComboBox;
    private static javax.swing.JPanel leftPanel;
    private static javax.swing.JRadioButton maleRadioBtn;
    private static javax.swing.JLabel minimize;
    private static javax.swing.JPanel outerPanel;
    private static javax.swing.JPasswordField passwordField;
    private static javax.swing.JLabel passwordLabel;
    private static javax.swing.JLabel passwordLabel1;
    private static javax.swing.JLabel phoneLabel;
    private static javax.swing.JPanel rightPanel;
    private static javax.swing.JButton signupBtn;
    private static javax.swing.JPanel upperPanel;
    private static javax.swing.JTextField usernameField;
    private static javax.swing.JLabel usernameLabel;
    private static javax.swing.JLabel usernameLabel1;
    // End of variables declaration//GEN-END:variables
}
